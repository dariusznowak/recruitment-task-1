{"version":3,"sources":["component/Widget.js","App.js","index.js"],"names":["Widget","useState","srcNumSystem","setSrcNumSystem","targetNumSystem","setTargetNumSystem","numToConvert","setNumToConvert","resultNumber","setResultNumber","handleInput","event","value","target","name","console","log","Math","round","startsWith","UserException","e","alert","message","this","className","onChange","type","max","min","placeholder","onKeyDown","key","match","preventDefault","maxLength","onClick","convertedNumber","parseInt","toString","isNaN","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QA4JeA,EAzJA,WACb,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEMC,EAAc,SAACC,GACnB,IACE,IAAIC,EAAQ,IASZ,GAP0B,iBAAtBD,EAAME,OAAOC,MAAkD,KAAvBH,EAAME,OAAOD,OACvDG,QAAQC,IAAI,QAAUL,EAAME,OAAOD,OACnCA,EAAQK,KAAKC,MAAMP,EAAME,OAAOD,QAEhCA,EAAQD,EAAME,OAAOD,MAIX,IAAVA,GACuB,MAAvBD,EAAME,OAAOD,OACbD,EAAME,OAAOD,MAAMO,WAAW,KAE9B,MAAM,IAAIC,EAAc,sCAGA,iBAAtBT,EAAME,OAAOC,KACfX,EAAgBS,GACe,iBAAtBD,EAAME,OAAOC,KACtBT,EAAmBO,GACY,iBAAtBD,EAAME,OAAOC,MACtBP,EAAgBK,GAElB,MAAOS,GACPC,MAAMD,EAAEE,SACRR,QAAQC,IAAIK,EAAEE,QAASF,EAAEP,QAI7B,SAASM,EAAcG,GACrBC,KAAKD,QAAUA,EACfC,KAAKV,KAAO,gBAwCd,OACE,uBAAMW,UAAU,SAAhB,UACE,sBAAKA,UAAU,YAAf,UACE,kEACA,uBACEA,UAAU,aACVX,KAAK,eACLY,SAAUhB,EACVE,MAAOV,EACPyB,KAAK,SACLC,IAAI,KACJC,IAAI,IACJC,YAAY,8BACZC,UAAW,SAACV,GACsB,OAA5BA,EAAEW,IAAIC,MAAM,aAAkC,OAAVZ,EAAEW,KACxCX,EAAEa,kBAGNC,UAAU,SAGd,sBAAKV,UAAU,YAAf,UACE,kEACA,uBACEA,UAAU,aACVX,KAAK,eACLY,SAAUhB,EACVE,MAAOR,EACPuB,KAAK,SACLG,YAAY,8BACZC,UAAW,SAACV,GACsB,OAA5BA,EAAEW,IAAIC,MAAM,aAAkC,KAAVZ,EAAEW,KACxCX,EAAEa,uBAKV,sBAAKT,UAAU,YAAf,UACE,2DACA,uBACEA,UAAU,aACVX,KAAK,eACLY,SAAUhB,EACVE,MAAON,EACPqB,KAAK,OACLG,YAAY,wBACZC,UAAW,SAACV,GAC4B,OAAlCA,EAAEW,IAAIC,MAAM,mBACdZ,EAAEa,kBAGNC,UAAU,UAGd,sBAAKV,UAAU,UAAf,UACE,wBACEA,UAAU,wBACVW,QA9Fc,SAACzB,GACrB,IACE,GACET,EAAe,GACfA,EAAe,IACfE,EAAkB,GAClBA,EAAkB,GAElB,MAAM,IAAIgB,EACR,sDAGJ,IAAMiB,EAAkBC,SAAShC,EAAcJ,GAAcqC,SAC3DnC,GAEFK,EAAgB4B,GAEZG,MAAMH,GAKV,MAAOhB,GACPC,MAAMD,EAAEE,SACRR,QAAQC,IAAIK,EAAEE,QAASF,EAAEP,MAE3BH,EAAMuB,kBAqEAO,UAAWvC,IAAiBE,IAAoBE,EAHlD,qBAOA,wBAAQmB,UAAU,sBAAsBW,QAtE3B,SAACzB,GAClBR,EAAgB,IAChBE,EAAmB,IACnBE,EAAgB,IAChBE,EAAgB,IAChBE,EAAMuB,kBAiEF,sBAIF,sBAAKT,UAAU,aAAf,UACE,yCADF,IACmB,qBAAKA,UAAU,gBAAf,SAAgCjB,WC3I1CkC,MARf,WACE,OACE,qBAAKjB,UAAU,MAAf,SACE,cAAC,EAAD,OCDNkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b212db8d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Widget.css\";\r\n\r\nconst Widget = () => {\r\n  const [srcNumSystem, setSrcNumSystem] = useState(\"\");\r\n  const [targetNumSystem, setTargetNumSystem] = useState(\"\");\r\n  const [numToConvert, setNumToConvert] = useState(\"\");\r\n  const [resultNumber, setResultNumber] = useState(\"\");\r\n\r\n  const handleInput = (event) => {\r\n    try {\r\n      let value = \" \";\r\n      //preventing pasting floating point numbers\r\n      if (event.target.name !== \"numToConvert\" && event.target.value !== \"\") {\r\n        console.log(\"tera \" + event.target.value);\r\n        value = Math.round(event.target.value);\r\n      } else {\r\n        value = event.target.value;\r\n      }\r\n\r\n      if (\r\n        value === 0 ||\r\n        event.target.value === \"0\" ||\r\n        event.target.value.startsWith(\"0\")\r\n      ) {\r\n        throw new UserException(\"The number must be greater than 0!\");\r\n      }\r\n\r\n      if (event.target.name === \"sourceNumSys\") {\r\n        setSrcNumSystem(value);\r\n      } else if (event.target.name === \"targetNumSys\") {\r\n        setTargetNumSystem(value);\r\n      } else if (event.target.name === \"numToConvert\") {\r\n        setNumToConvert(value);\r\n      }\r\n    } catch (e) {\r\n      alert(e.message);\r\n      console.log(e.message, e.name);\r\n    }\r\n  };\r\n\r\n  function UserException(message) {\r\n    this.message = message;\r\n    this.name = \"UserException\";\r\n  }\r\n\r\n  const convertNumber = (event) => {\r\n    try {\r\n      if (\r\n        srcNumSystem < 2 ||\r\n        srcNumSystem > 36 ||\r\n        targetNumSystem < 2 ||\r\n        targetNumSystem > 36\r\n      ) {\r\n        throw new UserException(\r\n          \"Numeral system value must be in range from 2 to 36\"\r\n        );\r\n      }\r\n      const convertedNumber = parseInt(numToConvert, srcNumSystem).toString(\r\n        targetNumSystem\r\n      );\r\n      setResultNumber(convertedNumber);\r\n\r\n      if (isNaN(convertedNumber) && typeof convertNumber === \"number\") {\r\n        throw new UserException(\r\n          \"Unknown calculation error\\nHINT: Check if a given number to convert is in a correct numeral system!\"\r\n        );\r\n      }\r\n    } catch (e) {\r\n      alert(e.message);\r\n      console.log(e.message, e.name);\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  const clearInput = (event) => {\r\n    setSrcNumSystem(\"\");\r\n    setTargetNumSystem(\"\");\r\n    setNumToConvert(\"\");\r\n    setResultNumber(\"\");\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form className=\"widget\">\r\n      <div className=\"input-div\">\r\n        <h3>Enter your source numeral system</h3>\r\n        <input\r\n          className=\"input-area\"\r\n          name=\"sourceNumSys\"\r\n          onChange={handleInput}\r\n          value={srcNumSystem}\r\n          type=\"number\"\r\n          max=\"36\"\r\n          min=\"2\"\r\n          placeholder=\"write a whole number > 0...\"\r\n          onKeyDown={(e) => {\r\n            if (e.key.match(/^[0-9]+$/) === null && e.key === \"27\") {\r\n              e.preventDefault();\r\n            }\r\n          }}\r\n          maxLength=\"2\"\r\n        ></input>\r\n      </div>\r\n      <div className=\"input-div\">\r\n        <h3>Enter your target numeral system</h3>\r\n        <input\r\n          className=\"input-area\"\r\n          name=\"targetNumSys\"\r\n          onChange={handleInput}\r\n          value={targetNumSystem}\r\n          type=\"number\"\r\n          placeholder=\"write a whole number > 0...\"\r\n          onKeyDown={(e) => {\r\n            if (e.key.match(/^[0-9]+$/) === null && e.key === 27) {\r\n              e.preventDefault();\r\n            }\r\n          }}\r\n        ></input>\r\n      </div>\r\n      <div className=\"input-div\">\r\n        <h3>Enter a number to convert</h3>\r\n        <input\r\n          className=\"input-area\"\r\n          name=\"numToConvert\"\r\n          onChange={handleInput}\r\n          value={numToConvert}\r\n          type=\"text\"\r\n          placeholder=\"write a number > 0...\"\r\n          onKeyDown={(e) => {\r\n            if (e.key.match(/^[A-Za-z0-9]+$/) === null) {\r\n              e.preventDefault();\r\n            }\r\n          }}\r\n          maxLength=\"14\"\r\n        ></input>\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button\r\n          className=\"button convert-button\"\r\n          onClick={convertNumber}\r\n          disabled={!srcNumSystem || !targetNumSystem || !numToConvert}\r\n        >\r\n          Convert\r\n        </button>\r\n        <button className=\"button clear-button\" onClick={clearInput}>\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <div className=\"result-box\">\r\n        <h3>Result:</h3> <div className=\"result-number\">{resultNumber}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import \"./App.css\";\nimport Widget from \"./component/Widget\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Widget />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}